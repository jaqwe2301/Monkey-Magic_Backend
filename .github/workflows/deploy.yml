name: Deploy Node.js Backend

on:
  push:
    branches:
      - main # main 브랜치에 푸시될 때 실행

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. env에 있던 환경변수들을 등록
      - name: Create .env file
        run: |
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env

      # 3. Node.js 설치 및 종속성 설치
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22.11.0"

      - name: Install dependencies
        run: npm install

      # 4. Docker 이미지 빌드
      - name: Build Docker Image
        run: |
          docker build -t monkey-magic-docker .

      # 5. Docker Hub 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 6. Docker 이미지 푸시
      - name: Push Docker Image to Docker Hub
        run: |
          docker tag monkey-magic-docker ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/monkey-magic-docker:latest

      # 7. SSH를 통해 서버에 배포
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/monkey-magic-docker:latest
            docker stop backend || true
            docker rm backend || true
            docker run -d --name backend -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/monkey-magic-docker:latest
