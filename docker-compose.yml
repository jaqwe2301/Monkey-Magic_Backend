version: "3.8"
services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  backend_app1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend_app1
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PORT: 8001
    ports:
      - "8001:8001"
    networks:
      - app-network

  backend_app2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend_app2
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PORT: 8002
    ports:
      - "8002:8002"
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/home/ubuntu/nginx/nginx.conf:ro
    depends_on:
      - backend_app1
      - backend_app2
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
